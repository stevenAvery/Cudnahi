/* 
	Feather icons from https://unpkg.com/feather-icons@4.29.0/dist/feather-sprite.svg
	This totals 62Kb - should this be limited to only the icons we need?
*/

/*
	Slight inset and outer box shadow (eg. input text vs dropdown)
	.hk-well   { box-shadow: inset 0 0 0 1px rgb(0 0 0 / 5%), inset 0 1px 2px 0 rgb(78 83 90 / 10%); }
	.hk-select { box-shadow: 0 1px 3px 0 rgb(89 105 129 / 5%), 0 1px 1px 0 rgb(0 0 0 / 3%); }
*/

@layer normalize, base, components, utilities;

@import "normalize.css" layer(normalize);

/*! cudnahi.css v0.1.0 | MIT License | github.com/stevenAvery/Cudnahi */
:root {
	/* 1px, 2px,      4px,     6px,      8px,    12px,    16px, 24px,   32px, 48px, 64px, 96px, 128px */
	/*      0.125rem, 0.25rem, 0.375rem, 0.5rem, 0.75rem, 1rem, 1.5rem, 2rem, 3rem, 4rem, 6rem, 8rem  */
	--white:          #FFFFFF;
	--grey-very-light:#EFF4F8; /* grey 175 (was grey 200) */
	--grey-light:     #e2e8f0; /* grey 300 (new) */
	--grey-normal:    #a0aec0; /* grey 500 (was grey 400) */
	--grey-dark:      #4a5568; /* grey 700 (was grey 600) */
	--grey-very-dark: #283141; /* grey 825 (was grey 800) */
	--primary:        #805AD5; /* purple 600 */
	--primary-light:  #ece6f2;
	--primary-normal: #805ad5;
	--primary-dark:   #553c9a;
	--success-light:  #E6F2E6;
	--success-normal: #80B691;
	--success-dark:   #1A7A3D; /* TODO clean up info colours */
	--error-light:    #FBECEA;
	--error-normal:   #DE968F;
	--error-dark:     #C24034;
	--warning-light:  #FFFBD4;
	--warning-normal: #debd5b;
	--warning-dark:   #855219;
	--info-light:     #E9F0FC;
	--info-normal:    #86A7DF;
	--info-dark:      #245EC2;

	--font-sans: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
	--font-serif: Georgia, Cambria, "Times New Roman", Times, serif;
	--font-mono: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

	--line-height-none:   1;
	--line-height-tight:  1.25;
	--line-height-normal: 1.5;

	--font-weight-light:    300;
	--font-weight-normal:   400;
	--font-weight-medium:   500;
	--font-weight-semibold: 600;
	--font-weight-bold:     700;

	--rounded-md:   0.375rem;
	--rounded-full: 9999px;
	--shadow:    0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
	--shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
	--shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

	--font-size-xs:   0.75rem;
	--font-size-sm:   0.875rem;
	--font-size-base: 1rem;
	--font-size-lg:   1.125rem;
	--font-size-xl:   1.25rem;
	--font-size-2xl:  1.5rem;
	--font-size-3xl:  1.875rem;
	--font-size-4xl:  2.25rem;

	--button-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
	--border-colour: var(--grey-normal); /* rgba(0, 0, 0, 0.2); */
	--border-hover-colour: var(--primary);
	--focus-colour: rgba(36, 94, 194, 0.50);
	--gap: 12px;
	--input-padding-y: 4px; /* 6px;*/
	--input-padding-x: var(--gap);
	--default-input-height: calc(var(--font-size-base) * var(--line-height-tight) + var(--input-padding-y) * 2 + 2px);
	--default-border-width: 1px;
	--content-limit-width: 48rem; /* ~768px */ 
}

/* --- Base Defaults -------------------------------------------------------- */
@layer base {
	html {
		font-family: var(--font-sans);
		color: var(--grey-very-dark);
		font-size: var(--font-size-base);
		line-height: var(--line-height-normal);
		font-weight: var(--font-weight-normal);
		height: 100%;
	}

	body {
		height: 100%;
	}

	*, ::after, ::before {
		box-sizing: border-box;
		-moz-box-sizing: border-box;
		-webkit-box-sizing: border-box;
	}

	*:focus {
		/* TODO looks strange when element has grey border */
		outline: 2px solid var(--focus-colour);
		/* box-shadow: 0 0 0 3px var(--outline-colour); */
	}

	label {
		line-height: var(--line-height-tight);
		padding: calc(var(--input-padding-y) + var(--default-border-width)) 0;
	}

	h1, h2, h3, h4, h5, h6, p {
		margin: var(--font-size-base) 0;
	}
	h1 { font-size: var(--font-size-4xl); margin-top: var(--font-size-4xl); }
	h2 { font-size: var(--font-size-3xl); margin-top: var(--font-size-3xl); }
	h3 { font-size: var(--font-size-2xl); margin-top: var(--font-size-2xl); }
	h4 { font-size: var(--font-size-xl);  margin-top: var(--font-size-xl);  }
	h5 { font-size: var(--font-size-lg);  margin-top: var(--font-size-lg);  }
	h6, p, span, label { font-size: var(--font-size-base); }

	link, a, a:visited {
		color: var(--info-dark);
		border-radius: var(--rounded-md);
		text-decoration: none;
	}
	a:hover {
		text-decoration: underline;
	}

	ul, ol {
		margin: 0;
	}

	dl, dt, dd {
		font-size: var(--font-size-base);
		line-height: var(--line-height-none);
		margin: 0;
	}
	dt {
		font-weight: var(--font-weight-bold);
	}
	dd {
		margin-left: 24px;
	}

	mark {
		padding: 2px 4px;
		border-radius: var(--rounded-md);
	}

	code, pre, pre span, kbd {
		font-family: var(--font-mono);
		padding: 2px 4px;
	}

	kbd {
		border-radius: var(--rounded-md);
		border: var(--default-border-width) solid var(--border-colour);
		padding: 1px 4px;
		border-bottom: 3px solid var(--border-colour);
	}

	small {
		font-size: var(--font-size-sm);
	}

	img {
		max-width: 100%;
	}

	table, tbody, thead, tfoot {
		border-collapse: collapse;
		width: 100%;
		table-layout: auto;
	}
	th, td {
		font-size: var(--font-size-base);
		font-weight: var(--font-weight-normal);
		text-align: left;
		padding: var(--input-padding-y) var(--input-padding-x);
	}
	/* td:first-child, th:first-child { padding-left: 0; }
	td:last-child, th:last-child { padding-right: 0; } */
	th { font-weight: var(--font-weight-semibold); }
	tr { border: none; border-bottom: var(--default-border-width) solid var(--grey-normal); }
	tbody > tr:last-child { border: none; }

	hr { border-top: var(--default-border-width) solid var(--border-colour); }

	/* All inputs MUST be (--font-size-base + 2*--input-padding-y) tall with box-border to vertically align properly (~32px) */
	button, .button, input[type=submit], input[type=button], input[type=reset] {
		font-size: var(--font-size-base);
		width: auto;
		padding: var(--input-padding-y) var(--input-padding-x);
		background-color: var(--primary-normal);
		color: var(--white);
		border: var(--default-border-width) solid var(--border-colour);
		border-radius: var(--rounded-md);
		box-shadow: var(--button-shadow);
	}

	button, .button, select, 
	input[type=submit], input[type=button], input[type=checkbox], input[type=range], input[type=radio] {
		cursor: pointer;
		white-space: nowrap;
	}

	/* https://www.w3schools.com/html/html_form_input_types.asp */
	input:not([type="button"]):not([type="checkbox"]):not([type="radio"]):not([type="reset"]):not([type="submit"]) {
		width: auto;
		min-width: 0;
		background-color: var(--white);
		color: var(--grey-very-dark);
		border: var(--default-border-width) solid var(--border-colour);
		border-radius: var(--rounded-md);
		-webkit-appearance: none;
		   -moz-appearance: none;
		        appearance: none;
	}


	/* Default selection controls */
	/* TODO pull switch into its own component */
	/* https://css-tricks.com/custom-styling-form-inputs-with-modern-css-features/ */
	/* https://codepen.io/aaroniker/pen/ZEYoxEY */
	@supports (-webkit-appearance: none) or (-moz-appearance: none) { /* TODO is this needed? */
		input[type='checkbox'], input[type='radio'] {
			--selection-size: calc(var(--default-input-height) - 6px*2); /* 4px smaller from top and bottom of other inputs */
			--selection-margin: calc((var(--default-input-height) - var(--selection-size)) / 2);
			--switch-width: calc(var(--selection-size) * 2);
			--switch-padding: 2px;
			--switch-knob-size: calc(var(--selection-size) - var(--switch-padding) * 2 - var(--default-border-width) * 2);
			--x-final: calc(var(--switch-width) - var(--switch-knob-size) - var(--switch-padding) * 2 - var(--default-border-width) * 2);

			-webkit-appearance: none;
			   -moz-appearance: none;
			        appearance: none;
			height: var(--selection-size);
			width: var(--selection-size);
			display: inline-block;
			vertical-align: top;
			position: relative;
			margin: var(--selection-margin) 0;
			cursor: pointer;
			border: var(--default-border-width) solid var(--border-colour);
			background: var(--white);
			/* transition: background 0.3s, border-color 0.3s, box-shadow 0.2s; */
		}
		input[type='checkbox']::after, input[type='radio']::after {
			display: flex;
			justify-content: center;
			content: "âœ”";
			color: white;
			font-size: calc(var(--selection-size) * 0.8);
		}
		input[type='checkbox']:checked, input[type='radio']:checked {
			background: var(--primary);
			border-color: var(--primary);
		}
		input[type='checkbox']:disabled, input[type='radio']:disabled {
			background: var(--grey-very-light);
			cursor: not-allowed;
			opacity: 0.9;
		}
		input[type='checkbox']:disabled:checked, input[type='radio']:disabled:checked {
			background: var(--grey-normal);
			border-color: var(--border-colour);
		}
		input[type='checkbox']:disabled + label, input[type='radio']:disabled + label {
			color: var(--grey-normal);
			cursor: not-allowed;
		}
		input[type='checkbox']:hover:not(:checked):not(:disabled), input[type='radio']:hover:not(:checked):not(:disabled) {
			border-color: var(--border-hover-colour);
		}
		input[type='checkbox']:not(.switch)::after, input[type='radio']:not(.switch)::after {
			opacity: var(--o, 0);
		}
		input[type='checkbox']:not(.switch)::after {
			margin-top: 1px;
		}
		input[type='checkbox']:not(.switch):checked, input[type='radio']:not(.switch):checked {
			--o: 1;
		}
		input[type='checkbox'] + label, input[type='radio'] + label {
			display: inline-block;
			vertical-align: top;
			cursor: pointer;
			margin-left: 4px;
		}
		input[type='checkbox']:not(.switch) {
			border-radius: var(--rounded-md);
		}
		input[type='checkbox'].switch {
			width: var(--switch-width);
			border-radius: var(--rounded-full);
		}
		input[type='checkbox'].switch::after {
			display: block;
			position: absolute;
			content: '';
			left: var(--switch-padding);
			top: var(--switch-padding);
			border-radius: var(--rounded-full);
			width: var(--switch-knob-size);
			height: var(--switch-knob-size);
			background: var(--ab, var(--border-colour));
			transform: translateX(var(--x, 0));
			transition: transform 0.2s ease;
		}
		input[type='checkbox'].switch:checked {
			--ab: var(--white);
			--x: var(--x-final);
		}
		input[type='checkbox'].switch:disabled:not(:checked)::after {
			opacity: 0.6;
		}
		input[type='radio'] {
			border-radius: var(--rounded-full);
		}
		input[type='radio']::after {
			width: calc(var(--selection-size) - 2px);
			height: calc(var(--selection-size) - 2px);
			border-radius: var(--rounded-full);
			background: var(--white);
			opacity: 0;
			transform: scale(0.5);
		}
	}

	/* Input hover */
	input:hover:not(:checked):not(:disabled) {
		border-color: var(--border-hover-colour);
	}

	/* Only include primary buttons? */
	button:hover:not(:disabled), input[type=submit]:hover:not(:disabled), input[type=button]:hover:not(:disabled), input[type=reset]:hover:not(:disabled) {
		background-color: var(--primary-dark);
	}

	.input-message {
		font-size: var(--font-size-sm);
		line-height: var(--line-height-normal);
	}

	/* 
	TODO
	https://css-tricks.com/snippets/css/form-validation-styling-on-input-focus/
	input:not(:focus):not(:placeholder-shown):invalid {
		border-color: var(--color-invalid);
	}
	input:not(:focus):not(:placeholder-shown):invalid ~ .error-message {
		display: block;	
	}
	*/
	input:not([type='radio']):not([type='checkbox']):not(:focus):invalid, .invalid:not(:focus):not(:focus-within) {
		border: var(--default-border-width) solid var(--error-dark) !important;
		background-color: var(--error-light) !important;
	}


	input:disabled, .disabled {
		background: var(--grey-light);
		color: var(--grey-normal)
	}

	input:not([type='radio']):not([type='checkbox']) {
		font-size: var(--font-size-base);
		line-height: var(--line-height-tight);
		padding: var(--input-padding-y) var(--input-padding-x);
		height: var(--default-input-height);
	}

}

/* --- Components ----------------------------------------------------------- */
@layer components {
	.content {
		width: var(--content-limit-width);
		margin: 0 auto;
		max-width: calc(100% - var(--gap) - var(--gap));
		padding-left: var(--gap);
		padding-right: var(--gap);
	}

	.badge {
		font-size: var(--font-size-xs);
		padding: 2px var(--input-padding-x);
		border-radius: var(--rounded-full);
		background-color: var(--grey-very-light);
		border: var(--default-border-width) solid var(--border-colour);
	}
	/* A badge that contains an icon */
	.icon-span {
		display: grid;
		grid-template-columns: auto 1fr;
		gap: 4px;
		align-items: center;
	}
	.icon-span--sm, .icon-span--sm span {
		font-size: var(--font-size-sm);
	}

	.card {
		font-size: var(--font-size-base);
		padding: var(--gap);
		outline: none;
		background-color: var(--white);
		color: var(--grey-very-dark);
		border: var(--default-border-width) solid var(--border-colour);
		border-radius: var(--rounded-md);
	}

	/* TODO Handle browsers that don't have svg support? */
	.icon {
		width: var(--font-size-base);
		height: var(--font-size-base);
		stroke: currentColor;
		stroke-width: 2;
		stroke-linecap: round;
    stroke-linejoin: round;
		fill: none;
	}
	.icon--xs { width: var(--font-size-xs); height: var(--font-size-xs); }
	.icon--sm, .icon-span--sm .icon { width: var(--font-size-sm); height: var(--font-size-sm); }
	.icon--md { width: 24px; height: 24px; stroke-width: 1.75; }
	.icon--lg { width: 48px; height: 48px; stroke-width: 1.5; }
	.icon--xl { width: 96px; height: 96px; stroke-width: 1; }

	/* --- Toggle Select --- */
	/* Works with radio buttons or checkboxes, but there is no visual distinction. Designed for radio buttons */
	/* Requires input and label to be in a div */
	.toggle-select {
		--select-padding: 2px;

		-webkit-appearance: none;
		   -moz-appearance: none;
		        appearance: none;
		display: grid; 
		grid-auto-flow: column; 
		grid-auto-columns: 1fr;
		gap: calc(var(--select-padding) * 2);
		padding: var(--select-padding);
		background-color: var(--grey-light);
		border: var(--default-border-width) solid var(--border-colour);
		border-radius: var(--rounded-md);
		height: var(--default-input-height);
	}
	.toggle-select div {
		display: inline-flex;
	}
	.toggle-select input {
		width: 0;
		height: 0;
		opacity: 0;
		margin: 0;
		border: none;
		flex-grow: 0;
		/* display: none; */ /* This simplifies things, but it breaks keyboard controls */
	}
	.toggle-select label {
		flex-grow: 1;
		text-align: center;
		margin: 0;
		padding: calc(var(--input-padding-y) - var(--select-padding)) var(--input-padding-x);
		height: calc(var(--default-input-height) - var(--select-padding) * 2 - 2px);
		max-width: 100%;
		white-space: nowrap;
	}
	.toggle-select input + label {
		border-radius: var(--rounded-md);
		border: var(--default-border-width) solid transparent;
	}
	.toggle-select input:checked + label {
		background-color: var(--white);
		border-color: var(--border-colour);
		box-shadow: var(--shadow);
	}
	.toggle-select input:hover + label {
		border-color: var(--border-hover-colour);
	}
	.toggle-select input:focus + label {
		outline: 2px solid var(--focus-colour);
	}

	/* --- Tight Tables --- */
	.table-tight th, .table-tight td {
		font-size: var(--font-size-base);
		line-height: var(--line-height-normal);
		padding: 0 4px;
	}
	.table-tight tr { border: none;}
	.table-tight thead { border: none; border-bottom: var(--default-border-width) solid var(--grey-normal); }
	.table-tight td:first-child, .table-tight th:first-child { padding-left: 0; }
	.table-tight td:last-child, .table-tight th:last-child { padding-right: 0; }
	.table-tight--sm th, .table-tight--sm td {
		font-size: var(--font-size-sm);
		line-height: var(--line-height-tight);
		padding: 2px 4px;
	}
	
	/* --- Popovers --- */
	.popover__wrapper {
		--arrow-size: 8px;
		--arrow-left: 24px;
		position: relative;
	}
	.popover__title {
		cursor: pointer; /* help; */
	}
	.popover__content {
		padding: var(--gap);
		border: var(--default-border-width) solid var(--border-colour);
		border-radius: var(--rounded-md);
		box-shadow: var(--shadow-lg);
		background-color: var(--white);

		opacity: 0;
		visibility: hidden;
		position: absolute;
		left: 0; /* calc(50% - var(--arrow-left)); /* So that the arrow points to the middle of the title*/
		margin: 0;
		margin-top: var(--arrow-size);
	}
	.popover__content::before, .popover__content::after {
		content: "";
		display: inline-block;
		left: var(--arrow-left) !important;
		position: absolute;
	}
	.popover__content::before {
		margin-left: 0;
		border: var(--arrow-size) solid transparent;
		border-bottom: var(--arrow-size) solid var(--border-colour);
		/* margin-left: calc(-var(--default-border-width) - var(--arrow-size)); */
		top: calc((0px - var(--arrow-size)) * 2);
	}
	.popover__content::after {
		margin-left: var(--default-border-width); /* calc(0px - var(--arrow-size)); */
		border: calc(var(--arrow-size) - var(--default-border-width)) solid #0000;
		border-bottom: calc(var(--arrow-size) - var(--default-border-width)) solid var(--white);
		top: calc((0px - (var(--arrow-size) - var(--default-border-width))) * 2);
	}
	.popover__wrapper:hover .popover__content {
		z-index: 10;
		opacity: 1;
		visibility: visible;
		/* transform: translate(0, -10px);
		transition: all 0.1s cubic-bezier(0.75, -0.02, 0.2, 0.97); */
	}
}

/* --- Utilities ------------------------------------------------------------ */
@layer utilities {
	/* --- Colours --- */
	.bg-white        { background-color: var(--white);         }
	.bg-grey-very-light   { background-color: var(--grey-very-light);    }
	.bg-grey-light  { background-color: var(--grey-light);   }
	.bg-grey-normal  { background-color: var(--grey-normal);   }
	.bg-grey-dark  { background-color: var(--grey-dark);   }
	.bg-grey-very-dark    { background-color: var(--grey-very-dark);     }
	.bg-success-dark { background-color: var(--success-dark); }
	.bg-error-dark   { background-color: var(--error-dark);   }
	.bg-warning-dark { background-color: var(--warning-dark); }
	.bg-info-dark    { background-color: var(--info-dark);    }
	.bg-none         { background-color: transparent;          }

	.border-fine    { border: var(--default-border-width) solid var(--border-colour); }
	.border-grey-very-light { border-color: var(--grey-very-light); }
	.border-grey-light      { border-color: var(--grey-light);      }
	.border-grey-normal     { border-color: var(--grey-normal);     }
	.border-grey-dark       { border-color: var(--grey-dark);       }
	.border-grey-very-dark  { border-color: var(--grey-very-dark);  }

	.text-white           { color: var(--white);           }
	.text-grey-very-light { color: var(--grey-very-light); }
	.text-grey-light      { color: var(--grey-light);      }
	.text-grey-normal     { color: var(--grey-normal);     }
	.text-grey-dark       { color: var(--grey-dark);       }
	.text-grey-very-dark  { color: var(--grey-very-dark);  }
	.text-success     { color: var(--success-dark); }
	.text-error       { color: var(--error-dark);   }
	.text-warning     { color: var(--warning-dark); }
	.text-info        { color: var(--info-dark);    }

	.primary-icon  { fill: var(--primary-light); stroke: var(--primary-dark); }
	.success-icon  { fill: var(--success-light); stroke: var(--success-dark); }
	.error-icon    { fill: var(--error-light);   stroke: var(--error-dark);   }
	.warning-icon  { fill: var(--warning-light); stroke: var(--warning-dark); }
	.info-icon     { fill: var(--info-light);    stroke: var(--info-dark);    }

	.primary-alert { background-color: var(--primary-light); color: var(--primary-dark); border: var(--default-border-width) solid var(--primary-normal); }
	.success-alert { background-color: var(--success-light); color: var(--success-dark); border: var(--default-border-width) solid var(--success-normal); }
	.error-alert   { background-color: var(--error-light);   color: var(--error-dark);   border: var(--default-border-width) solid var(--error-normal);   }
	.warning-alert { background-color: var(--warning-light); color: var(--warning-dark); border: var(--default-border-width) solid var(--warning-normal); }
	.info-alert    { background-color: var(--info-light);    color: var(--info-dark);    border: var(--default-border-width) solid var(--info-normal);    }

	/* --- Text --- */
	.text-4xl  { font-size: var(--font-size-4xl);  }
	.text-3xl  { font-size: var(--font-size-3xl);  }
	.text-2xl  { font-size: var(--font-size-2xl);  }
	.text-xl   { font-size: var(--font-size-xl);   }
	.text-lg   { font-size: var(--font-size-lg);   }
	.text-base { font-size: var(--font-size-base); }
	.text-sm   { font-size: var(--font-size-sm);   }
	.text-xs   { font-size: var(--font-size-xs);   }

	.text-left   { text-align: left;   }
	.text-centre { text-align: center; }
	.text-right  { text-align: right;  }

	.underline      { text-decoration: underline;    }
	.line-through   { text-decoration: line-through; }
	.no-underline   { text-decoration: none;         }
	.truncate { 
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap; 
	}
	

	.leading-none   { line-height: var(--line-height-none);   }
	.leading-tight  { line-height: var(--line-height-tight);  }
	.leading-normal { line-height: var(--line-height-normal); }

	/* --- Positioning --- */
	.hidden	{ display: none !important; }
	.grid        { display: grid;   }
	/* Defaults to 3 columns, but can be set: <div class="grid grid-cols" style="--number-of-columns: 6;></div>" */
	.grid-cols   { grid-template-columns: repeat(var(--columns, 3), minmax(0, 1fr)); gap: var(--gap); }
	.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); gap: var(--gap); }
	.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); gap: var(--gap); }
	.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); gap: var(--gap); }
	.grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); gap: var(--gap); }
	.grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); gap: var(--gap); }
	.grid-rows-auto { grid-row: auto; gap: var(--gap); }
	.gap         { gap: var(--gap); }
	.gap-0       { gap: 0; }

	.flex     { display: flex; }
	.flex-row { flex-direction: row; }
	.flex-col { flex-direction: column; }
	.flex-grow-0 { flex-grow: 0; }
	.flex-grow { flex-grow: 1; }
	.flex--no-wrap { flex-wrap: nowrap; } 
	/* Vertical */
	.items-start { align-items: flex-start; }
	.items-end { align-items: flex-end; }
	.centre-content, .items-centre   { align-items: center; }
	/* Horizontal */
	.justify-start   { justify-content: flex-start; }
	.justify-end     { justify-content: flex-end;   }
	.justify-between { justify-content: space-between; }
	.centre-content, .justify-centre { justify-content: center; }

	/* --- Spacing --- */
	.w-full { width:  100%; }
	.h-full { height: 100%; }
	.h-default-input { height: var(--default-input-height); }

	/* TODO clean up, and make consistent */
	.mx-auto { margin-left: auto; margin-right: auto; }
	.my-auto { margin-top: auto; margin-bottom: auto; }
	.mt-font-base { margin-top: var(--gap); }

	.m-0    { margin: 0; }
	.mt-0   { margin-top:       0; }
	.mr-0   { margin-right:     0; }
	.mb-0   { margin-bottom:    0; }
	.ml-0   { margin-left:      0; }
	.mt-gap { margin-top:     var(--gap); }
	.mr-gap { margin-right:   var(--gap); }
	.mb-gap { margin-bottom:  var(--gap); }
	.ml-gap { margin-left:    var(--gap); }
	.mt-4   { margin-top:     4px; }
	.mr-4   { margin-right:   4px; }
	.mb-4   { margin-bottom:  4px; }
	.ml-4   { margin-left:    4px; }
	.mt-8   { margin-top:     8px; }
	.mr-8   { margin-right:   8px; }
	.mb-8   { margin-bottom:  8px; }
	.ml-8   { margin-left:    8px; }
	.mt-16  { margin-top:    16px; }
	.mr-16  { margin-right:  16px; }
	.mb-16  { margin-bottom: 16px; }
	.ml-16  { margin-left:   16px; }
	.mt-24  { margin-top:    24px; }
	.mr-24  { margin-right:  24px; }
	.mb-24  { margin-bottom: 24px; }
	.ml-24  { margin-left:   24px; }
	.mt-32  { margin-top:    32px; }
	.mr-32  { margin-right:  32px; }
	.mb-32  { margin-bottom: 32px; }
	.ml-32  { margin-left:   32px; }
	.mt-48  { margin-top:    48px; }
	.mr-48  { margin-right:  48px; }
	.mb-48  { margin-bottom: 48px; }
	.ml-48  { margin-left:   48px; }
	.mt-64  { margin-top:    64px; }
	.mr-64  { margin-right:  64px; }
	.mb-64  { margin-bottom: 64px; }
	.ml-64  { margin-left:   64px; }

	.aspect-ratio-1 { aspect-ratio: 1; }
	.aspect-ratio-wide { aspect-ratio: 16/9; }
	.aspect-ratio-ultrawide { aspect-ratio: 21/9; }

	/* --- Other --- */
	.rounded-md   { border-radius: var(--rounded-md);   }
	.rounded-full { border-radius: var(--rounded-full); }
	.shadow       { box-shadow: var(--shadow);    }
	.shadow-md    { box-shadow: var(--shadow-md); }
}